name: Build & Deploy Sideko CLI
concurrency: deploy-cli-${{ github.ref }}
on:
  push:
    tags:
      - "v*.*.*"
env:
  CRATE_NAME: sideko
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_REPOSITORY:
  RUST_BACKTRACE: 1

jobs:
  release:
    name: CLI Release - ${{ matrix.platform.release_for }} with rust ${{ matrix.toolchain }}
    strategy:
      matrix:
        platform:
          - os_name: Linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-musl
            bin: sideko
            name: sideko-Linux-x86_64-musl.tar.gz
          - release_for: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: sideko.exe
            name: sideko-Windows-x86_64.zip
            command: both
          - release_for: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: sideko
            name: sideko-Darwin-x86_64.tar.gz
            command: both
          - os_name: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: sideko
            name: sideko-Darwin-aarch64.tar.gz
        toolchain:
          - stable

    runs-on: ${{ matrix.platform.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2

      - name: Configure Git
        run: |
          git config --global user.email "jdoe@example.com"
          git config --global user.name "J. Doe"

      - name: Install musl-tools on Linux
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools
        if: contains(matrix.platform.name, 'musl')

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.toolchain }}
          args: "--locked --release"
          strip: true

      - name: Package as archive
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            7z a ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          else
            tar czvf ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          fi
          cd -

      - name: Publish release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sideko-${{ matrix.platform.os_name }}
          path: "sideko-*"

      - name: Generate SHA-256
        run: shasum -a 256 ${{ matrix.platform.name }}
        if: |
          matrix.toolchain == 'stable' &&
          matrix.platform.os == 'macOS-latest'

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: "sideko-*"
          body: |
            # Sideko CLI Release
