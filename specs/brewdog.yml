openapi: '3.0.2'
info:
  title: Brewdog Beer API
  version: '2.0'
  description: Original API documentation [here](https://punkapi.com/documentation/v2) The Punk API is a fascinating service that provides access to a vast array of information about different beers, including their brewing methods, ingredients, and pairing options. It's designed for developers and beer enthusiasts who want to explore a wide range of beer-related data. The API offers endpoints to fetch details about individual beers, search based on various parameters like alcohol by volume (ABV), international bitterness units (IBU), and even beer names. It's an excellent resource for creating applications or services related to beer tasting, brewing, and culinary pairings. With its comprehensive dataset, the Punk API is a valuable tool for anyone interested in delving into the world of craft beers and their diverse characteristics.
servers:
  - url: https://api.punkapi.com/v2/

paths:
  /beers/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            "application/json":
                schema:
                  type: array
                  items:
                    type: object
                    $ref: "#/components/schemas/Beer"

  /beers/random:
    get:
      responses:
        '200':
          description: OK
          content:
            "application/json":
                schema:
                  type: array
                  items:
                    type: object
                    $ref: "#/components/schemas/Beer"
  
  /beers:
    get:
      parameters:
        - name: abv_gt
          in: query
          description: Returns all beers with ABV greater than the supplied number
          required: false
          schema:
            type: number

        - name: abv_lt
          in: query
          description: Returns all beers with ABV less than the supplied number
          required: false
          schema:
            type: number

        - name: ibu_gt
          in: query
          description: Returns all beers with IBU greater than the supplied number
          required: false
          schema:
            type: number

        - name: ibu_lt
          in: query
          description: Returns all beers with IBU less than the supplied number
          required: false
          schema:
            type: number

        - name: ebc_gt
          in: query
          description: Returns all beers with EBC greater than the supplied number
          required: false
          schema:
            type: number

        - name: ebc_lt
          in: query
          description: Returns all beers with EBC less than the supplied number
          required: false
          schema:
            type: number

        - name: beer_name
          in: query
          description: Returns all beers matching the supplied name
          required: false
          schema:
            type: string

        - name: yeast
          in: query
          description: Returns all beers matching the supplied yeast name
          required: false
          schema:
            type: string

        - name: brewed_before
          in: query
          description: "Returns all beers brewed before this date (format: mm-yyyy)"
          required: false
          schema:
            type: string
            format: date

        - name: brewed_after
          in: query
          description: "Returns all beers brewed after this date (format: mm-yyyy)"
          required: false
          schema:
            type: string
            format: date

        - name: hops
          in: query
          description: Returns all beers matching the supplied hops name
          required: false
          schema:
            type: string

        - name: malt
          in: query
          description: Returns all beers matching the supplied malt name
          required: false
          schema:
            type: string

        - name: food
          in: query
          description: Returns all beers matching the supplied food string
          required: false
          schema:
            type: string

        - name: ids
          in: query
          description: Returns all beers matching the supplied IDs (separate multiple IDs with '|')
          required: false
          schema:
            type: string

      responses:
        '200':
          description: OK
          content:
            "application/json":
                schema:
                  type: array
                  items:
                    type: object
                    $ref: "#/components/schemas/Beer"

components:
  schemas:
    Beer:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        tagline:
          type: string
        first_brewed:
          type: string
        description:
          type: string
        image_url:
          type: string
        abv:
          type: number
        ibu:
          type: number
        target_fg:
          type: number
        target_og:
          type: number
        ebc:
          type: number
        srm:
          type: number
        ph:
          type: number
        attenuation_level:
          type: number
        volume:
          $ref: '#/components/schemas/Volume'
        boil_volume:
          $ref: '#/components/schemas/Volume'
        method:
          $ref: '#/components/schemas/Method'
        ingredients:
          $ref: '#/components/schemas/Ingredients'
        food_pairing:
          type: array
          items:
            type: string
        brewers_tips:
          type: string
        contributed_by:
          type: string

      example:
        id: 192
        name: "Punk IPA 2007 - 2010"
        tagline: "Post Modern Classic. Spiky. Tropical. Hoppy."
        first_brewed: "04/2007"
        description: "Our flagship beer that kick started the craft beer revolution. This is James and Martin's original take on an American IPA, subverted with punchy New Zealand hops. Layered with new world hops to create an all-out riot of grapefruit, pineapple and lychee before a spiky, mouth-puckering bitter finish."
        image_url: "https://images.punkapi.com/v2/192.png"
        abv: 6.0
        ibu: 60.0
        target_fg: 123
        ebc: 123
        srm: 123
        ph: 123
        attenuation_level: 123
        volume:
          value: 20
          unit: "liters"
        boil_volume:
          value: 20
          unit: "liters"
        method:
          mash_temp:
            - temp:
                value: 65
                unit: "celsius"
              duration: 75
        fermentation:
          temp:
            value: 19.0
            unit: "celsius"
        ingredients:
          malt:
            - name: "Extra Pale"
              amount:
                value: 5.3
                unit: "kilograms"
          hops:
            - name: "Ahtanum"
              amount:
                value: 17.5
                unit: "grams"
              add: "start"
              attribute: "bitter"
        yeast: "Wyeast 1056 - American Aleâ„¢"
        food_pairing:
          - "Spicy carne asada with a pico de gallo sauce"
          - "Shredded chicken tacos with a mango chilli lime salsa"
          - "Cheesecake with a passion fruit swirl sauce"
        brewers_tips: "While it may surprise you, this version of Punk IPA isn't dry hopped but still packs a punch! To make the best of the aroma hops make sure they are fully submerged and add them just before knock out for an intense hop hit."
        contributed_by: "Sam Mason <samjbmason>"

    Volume:
      type: object
      properties:
        value:
          type: number
        unit:
          type: string

    Method:
      type: object
      properties:
        mash_temp:
          type: array
          items:
            $ref: '#/components/schemas/MashTemp'
        fermentation:
          $ref: '#/components/schemas/Fermentation'
        twist:
          type: string

    MashTemp:
      type: object
      properties:
        temp:
          $ref: '#/components/schemas/Temperature'
        duration:
          type: integer

    Fermentation:
      type: object
      properties:
        temp:
          $ref: '#/components/schemas/Temperature'

    Temperature:
      type: object
      properties:
        value:
          type: number
        unit:
          type: string

    Ingredients:
      type: object
      properties:
        malt:
          type: array
          items:
            $ref: '#/components/schemas/Malt'
        hops:
          type: array
          items:
            $ref: '#/components/schemas/Hops'
        yeast:
          type: string

    Malt:
      type: object
      properties:
        name:
          type: string
        amount:
          $ref: '#/components/schemas/Volume'

    Hops:
      type: object
      properties:
        name:
          type: string
        amount:
          $ref: '#/components/schemas/Volume'
        add:
          type: string
        attribute:
          type: string

    
